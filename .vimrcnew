" execute pathogen#infect()
set nocompatible              " required
syntax on
filetype off                  " required
filetype plugin on
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Plugin 'neoclide/coc.nvim', {'branch': 'release'} " autocomplete
Plugin 'neoclide/coc.nvim', {'do': 'yarn install --frozen-lockfile'}
Plugin 'vim-syntastic/syntastic' " syntax check & highlighting
Plugin 'nvie/vim-flake8' " pep8 checking
Plugin 'jnurmine/Zenburn' "theming
Plugin 'altercation/vim-colors-solarized' " theming
Plugin 'scrooloose/nerdtree' "nerdtree
Plugin 'kien/ctrlp.vim' " ctrlp
Plugin 'tpope/vim-fugitive' " git integration
Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'} "powerline
Plugin 'wsdjeg/FlyGrep.vim' " project wise search
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'kaicataldo/material.vim' "material theme 
Plugin 'hzchirs/vim-material' " another material themes
Plugin 'ryanoasis/vim-devicons'
Plugin 'tell-k/vim-autopep8'
Plugin 'jmcomets/vim-pony' " Django 
Plugin 'ludovicchabant/vim-gutentags' " tags
Plugin 'jeetsukumaran/vim-pythonsense' " movements python
" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
syntax enable
set showmatch
set incsearch "live matching"
set number
set relativenumber
set splitbelow
set splitright
set ruler
set laststatus=2 " display powerline on one window too
set autoindent
set backspace=indent,eol,start

" Oceanic
"let g:material_style='oceanic'
"set background=dark
"colorscheme vim-material
"let g:airline_theme='material'
" make python beautiful

let g:material_terminal_italics = 1
let g:material_theme_style = 'ocean'
colorscheme material

let python_highlight_all=1
syntax on

"split navigations
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

inoremap <C-h> <Left>
inoremap <C-j> <Down>
inoremap <C-k> <Up>
inoremap <C-l> <Right>

inoremap jj <Esc>

nnoremap <S-Up> :m-2<CR>
nnoremap <S-Down> :m+<CR>
inoremap <S-Up> <Esc>:m-2<CR>
inoremap <S-Down> <Esc>:m+<CR>


" Enable folding
set foldmethod=indent
set foldlevel=99
set encoding=utf-8

" Enable folding with spacebar
nnoremap <space> za

""" 4 space with tab
""au BufNewFile,BufRead *.py
""    \ set tabstop=4
""    \ set softtabstop=4
""    \ set shiftwidth=4
""    \ set textwidth=79
""    \ set expandtab
""    \ set autoindent
""    \ set fileformat=unix
""
" for html, css and js
""au BufNewFile,BufRead *.js, *.html, *.css
""    \ set tabstop=2
""    \ set softtabstop=2
""    \ set shiftwidth=2
""
" flag unnecessary whitespace

" coc vim setup
" TextEdit might fail if hidden is not set.
set hidden

" Some servers have issues with backup files, see #649.
set nobackup
set nowritebackup

" Give more space for displaying messages.
set cmdheight=2

" Having longer updatetime (default is 4000 ms = 4 s) leads to noticeable
" delays and poor user experience.
set updatetime=300

" Don't pass messages to |ins-completion-menu|.
set shortmess+=c

" Always show the signcolumn, otherwise it would shift the text each time
" diagnostics appear/become resolved.
set signcolumn=yes


" keybinding for flygrep project wise searching
nnoremap <Leader>s :FlyGrep<cr>


map <C-n> :NERDTreeToggle<CR>
"Gvim mods
scriptencoding utf-8
set wildignore=*.swp,*.bak,*.pyc,*.class
set history=100

set guioptions-=m
set guioptions-=T
set guioptions-=r
set guioptions-=Lo
set mouse=a
let g:NERDTreeMouseMode=3
"nerd-commenter settings
" Add spaces after comment delimiters by default
let g:NERDSpaceDelims = 1
" Use compact syntax for prettified multi-line comments
let g:NERDCompactSexyComs = 1
" Align line-wise comment delimiters flush left instead of following code
" indentation
let g:NERDDefaultAlign = 'left'
" Allow commenting and inverting empty lines (useful when commenting a
" region)
let g:NERDCommentEmptyLines = 1
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
" Enable trimming of trailing whitespace when uncommenting
let g:NERDTrimTrailingWhitespace = 1

let NERDTreeIgnore=['\.pyc$', '\~$'] "ignore files in NERDTree

" Remove all trailing whitespace by pressing F4

noremap <F4> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar><CR>

" For Neovim 0.1.3 and 0.1.4 - https://github.com/neovim/neovim/pull/2198
if (has('nvim'))
  let $NVIM_TUI_ENABLE_TRUE_COLOR = 1
endif

" For Neovim > 0.1.5 and Vim > patch 7.4.1799 - https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162
" Based on Vim patch 7.4.1770 (`guicolors` option) - https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd
" https://github.com/neovim/neovim/wiki/Following-HEAD#20160511
if (has('termguicolors'))
  set termguicolors
endif


" zoom pane and zoom out pane
noremap Zz <c-w>_ \| <c-w>\|
noremap Zo <c-w>=
set clipboard=unnamedplus

autocmd FileType python noremap <buffer> <C-x> :call Autopep8()<CR>

let g:gutentags_ctags_exclude = ['*.css', '*.html', '*.js']
let g:gutentags_cache_dir = '~/.vim/gutentags'

map <silent> <leader>jd :CtrlPTag<cr><c-\>w
